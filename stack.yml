version: "3"

services:

  zoo0:
    image: zookeeper
    restart: always
    hostname: zoo0
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: "server.1=zoo1:2888:3888;2181"
  
  broker0:
    image: confluentinc/cp-kafka:7.0.1
    hostname: broker0
    ports:
      - "9092:9092"
    depends_on:
      - zoo0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zoo0:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    depends_on:
      - zoo0
      - broker0
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker0:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zoo0:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997

  # schemaregistry0:
  #   image: confluentinc/cp-schema-registry:5.5.0
  #   ports:
  #     - 8085:8085
  #   depends_on:
  #     - zoo0
  #     - broker0
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker0:29092
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zoo0:2181
  #     SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
  #     SCHEMA_REGISTRY_HOST_NAME: schemaregistry0
  #     SCHEMA_REGISTRY_LISTENERS: http://schemaregistry0:8085

  #     SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
  #     SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
  #     SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas


  # kafka-connect0:
  #   image: confluentinc/cp-kafka-connect:6.0.1
  #   ports:
  #     - 8083:8083
  #   depends_on:
  #     - broker0
  #     - schemaregistry0
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: broker0:29092
  #     CONNECT_GROUP_ID: compose-connect-group
  #     CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_TOPIC: _connect_status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  #     CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry0:8085
  #     CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry0:8085
  #     CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect0
  #     CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"


  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  flower:
    image: mher/flower:0.9.5
    command: ['flower', '--broker=redis://redis:6379', '--port=5555']
    ports:
      - "5555:5555"
    depends_on:
      - redis
  

